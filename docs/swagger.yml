openapi: "3.0.0"
info:
  title: References
  description: Cadastro e manipulação de citações bibliográficas
  version: '0.1.0'
  license:
    name: MIT
  contact:
    name: API Support
    email: 'wagner.marques@somosphi.com'


servers:
  - description: Desenvolvimento
    url: https://api.dev.internal.marqueswagner.com/references
  - description: Homologação
    url: https://api.hlg.internal.marqueswagner.com/references
  - description: Produção
    url: https://api.internal.marqueswagner.com/references

paths:
  /reference:
    post:
      summary: Criar uma referência 
      tags:
        - References
      requestBody:
        required: true
        content: 
          content/json:
            schema:
              $ref: '#/components/schemas/create'
      responses:
        '200':
          description: Dados da referência
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/createResponse'
        '400':
          description: Requisição inválida
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/error'
    get:
      summary: Buscar todas as referências
      tags:
        - References
      parameters:
        - $ref: '#/components/parameters/referenceYear'
      responses:
        '200':
          description: Dados da referência
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/getAllResponse'
        '204':
          description: Nenhum referência encontrada
          content: Sem conteúdo
  
  /reference/{referenceId}:
    get:
      summary: Buscar uma referência
      tags:
        - References
      parameters:
        - $ref: '#/components/parameters/referenceId'
      responses:
        '200':
          description: Dados da referência
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/getResponse'
        '204':
          description: Nenhum referência encontrada
          content: Sem conteúdo
    patch:
      summary: Atualizar uma referência
      tags:
        - References
      parameters:
        - $ref: '#/components/parameters/referenceId'
      requestBody:
        required: true
        content: 
          content/json:
            schema:
              $ref: '#/components/schemas/update'
      responses:
        '200':
          description: Dados da referência
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/createResponse'
        '400':
          description: Requisição inválida
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/error'
        '422':
          description: A requisição está correta, porém não foi possível processar as instruções presentes
          content:
            'application/json':
              schema:
                type: object
                properties:
                  code:
                    description: Código do erro
                    type: string
                    example: 'UNPROCESSABLE_ENTITY'
                  message:
                    description: Mensagem de erro
                    type: string
                    example: 'Reference not found'
    delete:
      summary: Deletar uma referência
      tags:
        - References
      parameters:
        - $ref: '#/components/parameters/referenceId'
      responses:
        '204':
          description: Usuário deletado
          content: Sem conteúdo
        '400':
          description: Requisição inválida
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/error'
        '422':
          description: A requisição está correta, porém não foi possível processar as instruções presentes
          content:
            'application/json':
              schema:
                type: object
                properties:
                  code:
                    description: Código do erro
                    type: string
                    example: 'UNPROCESSABLE_ENTITY'
                  message:
                    description: Mensagem de erro
                    type: string
                    example: 'Reference not found'

components: 
  parameters:
    required:
    referenceYear:
      name: year
      in: query
      description: Ano da referência
      schema:
        type: string
    
    referenceId:
      required: true
      name: referenceId
      in: path
      description: Identificador da referência
      schema:
        type: string
        format: uuid
        example: 'e42aad74-8fbd-4ce3-8bdd-cb9052f0dadc'
      
  schemas:
    reference: 
      type: object
      properties:
        description:
          description: Descrição da citação
          type: string
          example: 'Definição de cloud computing'
        citation:
          description: Texto a ser citado
          type: string
          example: 'Cloud computing is a model for enabling ubiquitous, convenient, on-demand network access to a shared pool of configurable computing resources (e.g., networks, servers, storage, applications, and services) that can be rapidly provisioned and released with minimal management effort or service provider interaction. This cloud model is composed of five essential characteristics, three service models, and four deployment models.'
        year:
          description: Ano da publicação
          type: string
          format: date   
          example: '2018'
        bibtex:
          description: Referência no formato Latex
          type: string
          example: '@article{mell2011nist,
            title={The NIST definition of cloud computing},
            author={Mell, Peter and Grance, Tim and others},
            year={2011},
            publisher={Computer Security Division, Information Technology Laboratory, National~…}
          }'   

    create:
      required:
        - citation
        - bibtex
      allOf:
        - $ref: '#/components/schemas/reference'
        

    update:
      anyOf:
        - $ref: '#/components/schemas/reference' 
    
    createResponse:
      type: object
      required: ['id']
      properties:
        id:
          type: string
          format: uuid
          example: 'e42aad74-8fbd-4ce3-8bdd-cb9052f0dadc'
    
    getAllResponse:
      type: array
      items:
        allOf:
        - $ref: '#/components/schemas/reference'

    getResponse:
      allOf:
        - $ref: '#/components/schemas/reference'
        
    error:
      type: object
      properties:
        code:
          description: Código do erro
          type: string
          example: 'BAD_REQUEST'
        message:
          description: Mensagem de erro
          type: string
          example: 'Invalid request body'
